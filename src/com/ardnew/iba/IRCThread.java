package com.ardnew.iba;

import java.io.IOException;

import com.ardnew.iba.plugin.Control;
import com.ardnew.iba.plugin.Echo;
import com.ardnew.iba.plugin.Log;

import org.schwering.irc.lib.IRCConnection;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// file:
//   IRCThread.java
//
// description:
//   TODO
//
// author:
//   ardnew, andrew@ardnew.com
//
// date:
//   April 20, 2013
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public class IRCThread extends IRCConnection 
{
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// private instance members
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  private IRCHost _host;
  private IRCUser _user;
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// constructors 
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public IRCThread(IRCHost host, IRCUser user) throws IllegalArgumentException
  {
    super(host.host(), new int[]{ host.port() }, host.pass(), user.nick(), user.user(), user.name());
    
    this._host = host;
    this._user = user;
    
    try
    {
      this.addIRCEventListener(new Control(this, true));
      this.addIRCEventListener(new Log(this, true));
      this.addIRCEventListener(new Echo(this, true));
    }
    catch (IllegalArgumentException e)
    {
      
    }
    finally
    {
      
    }
  }
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// accessor/mutator methods for private instance members
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public IRCHost host()
  {
    return this._host;
  }
  
  public IRCUser user()
  {
    return this._user;
  }
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// overridden methods declared in super class
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  @Override
	public void connect() throws IOException 
  {
    // do any local processing here before we dispatch
    this.setName(this.toString());
    
    super.connect();
	}  
  
  @Override
  public String toString()
  {
    return 
      "IRCThread(" + this.hashCode() + ")=" +
      Util.q(
        Util.pjoin(
          Util.q("alive=" + this.isAlive()),
          Util.q("connected=" + this.isConnected()),
          Util.q("host=" + this.host().toString()), 
          Util.q("user=" + this.user().toString())
        )
      );
  }
}
