package com.ardnew.iba.plugin;

import com.ardnew.iba.IRCChan;
import com.ardnew.iba.IRCEventHandler;
import com.ardnew.iba.IRCThread;
import com.ardnew.iba.Util;

import org.schwering.irc.lib.IRCModeParser;
import org.schwering.irc.lib.IRCUser;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// file:
//   Control.java
//
// description:
//   TODO
//
// author:
//   ardnew, andrew@ardnew.com
//
// date:
//   April 20, 2013
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public final class Control extends IRCEventHandler
{
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// local type definitions
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public enum ConnectionState { csNone, csActive };
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// private static class fields
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  
  
  private static final String NAME = "CONTROL";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// private instance members
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  private ConnectionState _stat;  

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// constructors 
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public Control(IRCThread conn)
  {
    super(conn, Control.NAME);
    
    this.stat(ConnectionState.csNone);
  }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// accessor/mutator methods for private instance members
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public ConnectionState stat()
  {
    return this._stat;
  }
  
  public void stat(ConnectionState stat)
  {
    this._stat = stat;
  }  
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// overridden methods implementing interfaces
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  @Override
  public void onRegistered()
  {
    this.stat(ConnectionState.csActive);
    outputMessage("identity verified, connection established.");
  }

  @Override
  public void onReply(int num, String value, String msg)
  {
    switch (num)
    {
      case RPL_ENDOFMOTD:
        if (this.stat() == ConnectionState.csActive)
        {
          // join all of our channels
          for (IRCChan c : this.conn().host().chan())
          {
            this.conn().doJoin(c.name(), c.pass());
          }
        }
        break;
    }
  } 
}
